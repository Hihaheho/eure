%start Swon
%title "SWON"
%grammar_type 'LL(k)'
%line_comment "#"

%auto_newline_off

%scanner String {
  %auto_ws_off
}

%scanner ValueContext {
}

%%

// no bindings after any sections
Swon: { Binding } { Section };
  Section: SectionHeader Swon Newline;

Binding: Keys Bindings Newline ;
  Bindings: ValueBinding | SectionBinding | TextBinding ;
  ValueBinding: Bind^ [Newline] %push(ValueContext) Value %pop();
  SectionBinding: Begin^ Newline Swon Newline End^ ;
  TextBinding: ':'^ [Newline] Text ;
  Text: /todo/ ;

SectionHeader: '@'^ Keys Newline ;
  Keys: Key { '.'^ Key } ;
  Key: KeyBase [ ArrayMarker ] ;
  ArrayMarker: ArrayBegin^ [ Integer ] ArrayEnd^ ;
  KeyBase: Ident | ExtensionNameSpace | String ;
  Ident: /\p{XID_Start}\p{XID_Continue}*/ ;
  // extension name must always be valid ident, not quoted ident
  ExtensionNameSpace: '$'^ Ident ;

Value: Object | Array | Integer | Boolean | Null | String ;
  Object: Begin^ { Key Bind^ Value Comma^ } End^ ;
  Array: ArrayBegin^ { Value Comma^ } ArrayEnd^ ;
  Integer: <INITIAL, ValueContext>/\d[\d_]*/ ;
  Boolean: True | False ;
  True: <INITIAL, ValueContext>'true';
  False: <INITIAL, ValueContext>'false';
  Null: <INITIAL, ValueContext>'null' ;

String: Quote^ %push(String) { Char } Quote^ %pop() [ Continue^ String ] ;
  Char: Escaped | Unicode4 | Unicode8 | Nonescaped ;
  Quote: <String, INITIAL>/"/;
  Escaped: <String>/\\[\\nrt\"0]/;
  Unicode4: <String>/\\u[0-9a-fA-F]{4}/;
  Unicode8: <String>/\\U[0-9a-fA-F]{8}/;
  Nonescaped: <String>/\p{Letter}\p{Mark}\p{Number}\p{Punctuation}\p{Symbol}\p{Space_Separator}/;

Newline: /\r\n|\r|\n/ ;
Begin: <INITIAL, ValueContext>'{';
End: <INITIAL, ValueContext>'}' ;
ArrayBegin: <INITIAL, ValueContext>'[';
ArrayEnd: <INITIAL, ValueContext>']' ;
Bind: <INITIAL, ValueContext>'=';
Comma: <INITIAL, ValueContext>',' ;
Continue: <INITIAL, ValueContext>'\\' ;
